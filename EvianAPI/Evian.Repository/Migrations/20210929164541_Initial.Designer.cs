// <auto-generated />
using Evian.Repository.Core;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using System;

namespace Evian.Repository.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210929164541_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Evian.Entities.Banco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<string>("Codigo")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("codigo");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nome");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.HasKey("Id");

                    b.ToTable("banco");
                });

            modelBuilder.Entity("Evian.Entities.Categoria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<Guid?>("CategoriaPaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoCarteira")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaPaiId");

                    b.ToTable("categoria");
                });

            modelBuilder.Entity("Evian.Entities.Cidade", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<string>("CodigoIbge")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("codigo_ibge");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<Guid>("EstadoId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("estado_id");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nome");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("cidade");
                });

            modelBuilder.Entity("Evian.Entities.ConciliacaoBancaria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Arquivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<Guid>("ContaBancariaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.HasKey("Id");

                    b.HasIndex("ContaBancariaId");

                    b.ToTable("conciliacao_bancaria");
                });

            modelBuilder.Entity("Evian.Entities.ConciliacaoBancariaItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<Guid>("ConciliacaoBancariaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("OfxLancamentoMD5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusConciliado")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ConciliacaoBancariaId");

                    b.ToTable("conciliacao_bancaria_item");
                });

            modelBuilder.Entity("Evian.Entities.ConciliacaoBancariaItemContaFinanceira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<Guid>("ConciliacaoBancariaItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaFinanceiraBaixaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaPagarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaReceberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.Property<decimal>("ValorConciliado")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ConciliacaoBancariaItemId");

                    b.HasIndex("ContaFinanceiraBaixaId");

                    b.HasIndex("ContaPagarId");

                    b.HasIndex("ContaReceberId");

                    b.ToTable("conciliacao_bancaria_item_conta_financeira");
                });

            modelBuilder.Entity("Evian.Entities.CondicaoParcelamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<string>("CondicoesParcelamento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("QtdParcelas")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.HasKey("Id");

                    b.ToTable("condicao_parcelamento");
                });

            modelBuilder.Entity("Evian.Entities.ContaBancaria", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Agencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<Guid>("BancoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<string>("DigitoAgencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DigitoConta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NomeConta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.Property<decimal?>("ValorInicial")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.ToTable("conta_bancaria");
                });

            modelBuilder.Entity("Evian.Entities.ContaFinanceiraBaixa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<Guid>("ContaBancariaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaPagarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaReceberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContaBancariaId");

                    b.HasIndex("ContaPagarId");

                    b.HasIndex("ContaReceberId");

                    b.ToTable("conta_financeira_baixa");
                });

            modelBuilder.Entity("Evian.Entities.ContaPagar", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CondicaoParcelamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaPagarParcelaPaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaPagarRepeticaoPaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoParcela")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormaPagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroRepeticoes")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Repetir")
                        .HasColumnType("bit");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StatusContaBancaria")
                        .HasColumnType("int");

                    b.Property<int>("TipoContaFinanceira")
                        .HasColumnType("int");

                    b.Property<int>("TipoPeriodicidade")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.Property<decimal?>("ValorPago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorPrevisto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CondicaoParcelamentoId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("conta_pagar");
                });

            modelBuilder.Entity("Evian.Entities.ContaReceber", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<Guid>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CondicaoParcelamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaReceberParcelaPaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaReceberRepeticaoPaiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime>("DataEmissao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<DateTime>("DataVencimento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescricaoParcela")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("FormaPagamentoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<int?>("NumeroRepeticoes")
                        .HasColumnType("int");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PessoaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Repetir")
                        .HasColumnType("bit");

                    b.Property<decimal>("Saldo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("StatusContaBancaria")
                        .HasColumnType("int");

                    b.Property<int>("TipoContaFinanceira")
                        .HasColumnType("int");

                    b.Property<int>("TipoPeriodicidade")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.Property<decimal?>("ValorPago")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorPrevisto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("CondicaoParcelamentoId");

                    b.HasIndex("FormaPagamentoId");

                    b.HasIndex("PessoaId");

                    b.ToTable("conta_receber");
                });

            modelBuilder.Entity("Evian.Entities.Estado", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<string>("CodigoIbge")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("codigo_ibge");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nome");

                    b.Property<Guid>("PaisId")
                        .HasMaxLength(36)
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("pais_id");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("sigla");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.Property<string>("UtcId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("estado");
                });

            modelBuilder.Entity("Evian.Entities.FormaPagamento", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("TipoFormaPagamento")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.HasKey("Id");

                    b.ToTable("forma_pagamento");
                });

            modelBuilder.Entity("Evian.Entities.MovimentacaoFinanceira", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<Guid?>("CategoriaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaBancariaDestinoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaBancariaOrigemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaPagarId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ContaReceberId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ContaBancariaDestinoId");

                    b.HasIndex("ContaBancariaOrigemId");

                    b.HasIndex("ContaPagarId")
                        .IsUnique()
                        .HasFilter("[ContaPagarId] IS NOT NULL");

                    b.HasIndex("ContaReceberId")
                        .IsUnique()
                        .HasFilter("[ContaReceberId] IS NOT NULL");

                    b.ToTable("movimentacao");
                });

            modelBuilder.Entity("Evian.Entities.Pais", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<string>("CodigoIbge")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("codigo_ibge");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nome");

                    b.Property<string>("Sigla")
                        .IsRequired()
                        .HasMaxLength(2)
                        .HasColumnType("nvarchar(2)")
                        .HasColumnName("sigla");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.HasKey("Id");

                    b.ToTable("pais");
                });

            modelBuilder.Entity("Evian.Entities.Pessoa", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CEP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CPFCNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("CidadeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Cliente")
                        .HasColumnType("bit");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Endereco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("EstadoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Fornecedor")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observacao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaisId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("PaisId");

                    b.ToTable("pessoa");
                });

            modelBuilder.Entity("Evian.Entities.SaldoHistorico", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit")
                        .HasColumnName("ativo");

                    b.Property<Guid>("ContaBancariaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_alteracao");

                    b.Property<DateTime?>("DataExclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_exclusao");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_inclusao");

                    b.Property<Guid>("EmpresaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("SaldoConsolidado")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoDia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPagamentos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRecebimentos")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UsuarioAlteracao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_alteracao");

                    b.Property<string>("UsuarioExclusao")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_exclusao");

                    b.Property<string>("UsuarioInclusao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("usuario_inclusao");

                    b.HasKey("Id");

                    b.HasIndex("ContaBancariaId")
                        .IsUnique();

                    b.ToTable("saldo_historico");
                });

            modelBuilder.Entity("Evian.Entities.Categoria", b =>
                {
                    b.HasOne("Evian.Entities.Categoria", "CategoriaPai")
                        .WithMany()
                        .HasForeignKey("CategoriaPaiId");

                    b.Navigation("CategoriaPai");
                });

            modelBuilder.Entity("Evian.Entities.Cidade", b =>
                {
                    b.HasOne("Evian.Entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Evian.Entities.ConciliacaoBancaria", b =>
                {
                    b.HasOne("Evian.Entities.ContaBancaria", "ContaBancaria")
                        .WithMany()
                        .HasForeignKey("ContaBancariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaBancaria");
                });

            modelBuilder.Entity("Evian.Entities.ConciliacaoBancariaItem", b =>
                {
                    b.HasOne("Evian.Entities.ConciliacaoBancaria", "ConciliacaoBancaria")
                        .WithMany("ConciliacaoBancariaItens")
                        .HasForeignKey("ConciliacaoBancariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConciliacaoBancaria");
                });

            modelBuilder.Entity("Evian.Entities.ConciliacaoBancariaItemContaFinanceira", b =>
                {
                    b.HasOne("Evian.Entities.ConciliacaoBancariaItem", "ConciliacaoBancariaItem")
                        .WithMany("ConciliacaoBancariaItemContasFinanceiras")
                        .HasForeignKey("ConciliacaoBancariaItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evian.Entities.ContaFinanceiraBaixa", "ContaFinanceiraBaixa")
                        .WithMany()
                        .HasForeignKey("ContaFinanceiraBaixaId");

                    b.HasOne("Evian.Entities.ContaPagar", "ContaPagar")
                        .WithMany()
                        .HasForeignKey("ContaPagarId");

                    b.HasOne("Evian.Entities.ContaReceber", "ContaReceber")
                        .WithMany()
                        .HasForeignKey("ContaReceberId");

                    b.Navigation("ConciliacaoBancariaItem");

                    b.Navigation("ContaFinanceiraBaixa");

                    b.Navigation("ContaPagar");

                    b.Navigation("ContaReceber");
                });

            modelBuilder.Entity("Evian.Entities.ContaBancaria", b =>
                {
                    b.HasOne("Evian.Entities.Banco", "Banco")
                        .WithMany()
                        .HasForeignKey("BancoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banco");
                });

            modelBuilder.Entity("Evian.Entities.ContaFinanceiraBaixa", b =>
                {
                    b.HasOne("Evian.Entities.ContaBancaria", "ContaBancaria")
                        .WithMany()
                        .HasForeignKey("ContaBancariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evian.Entities.ContaPagar", "ContaPagar")
                        .WithMany()
                        .HasForeignKey("ContaPagarId");

                    b.HasOne("Evian.Entities.ContaReceber", "ContaReceber")
                        .WithMany()
                        .HasForeignKey("ContaReceberId");

                    b.Navigation("ContaBancaria");

                    b.Navigation("ContaPagar");

                    b.Navigation("ContaReceber");
                });

            modelBuilder.Entity("Evian.Entities.ContaPagar", b =>
                {
                    b.HasOne("Evian.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evian.Entities.CondicaoParcelamento", "CondicaoParcelamento")
                        .WithMany()
                        .HasForeignKey("CondicaoParcelamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evian.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evian.Entities.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("CondicaoParcelamento");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Evian.Entities.ContaReceber", b =>
                {
                    b.HasOne("Evian.Entities.Categoria", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evian.Entities.CondicaoParcelamento", "CondicaoParcelamento")
                        .WithMany()
                        .HasForeignKey("CondicaoParcelamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evian.Entities.FormaPagamento", "FormaPagamento")
                        .WithMany()
                        .HasForeignKey("FormaPagamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Evian.Entities.Pessoa", "Pessoa")
                        .WithMany()
                        .HasForeignKey("PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("CondicaoParcelamento");

                    b.Navigation("FormaPagamento");

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("Evian.Entities.Estado", b =>
                {
                    b.HasOne("Evian.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Evian.Entities.MovimentacaoFinanceira", b =>
                {
                    b.HasOne("Evian.Entities.ContaBancaria", "ContaBancariaDestino")
                        .WithMany()
                        .HasForeignKey("ContaBancariaDestinoId");

                    b.HasOne("Evian.Entities.ContaBancaria", "ContaBancariaOrigem")
                        .WithMany()
                        .HasForeignKey("ContaBancariaOrigemId");

                    b.HasOne("Evian.Entities.ContaPagar", "ContaPagar")
                        .WithOne("MovimentacaoFinanceira")
                        .HasForeignKey("Evian.Entities.MovimentacaoFinanceira", "ContaPagarId");

                    b.HasOne("Evian.Entities.ContaReceber", "ContaReceber")
                        .WithOne("MovimentacaoFinanceira")
                        .HasForeignKey("Evian.Entities.MovimentacaoFinanceira", "ContaReceberId");

                    b.Navigation("ContaBancariaDestino");

                    b.Navigation("ContaBancariaOrigem");

                    b.Navigation("ContaPagar");

                    b.Navigation("ContaReceber");
                });

            modelBuilder.Entity("Evian.Entities.Pessoa", b =>
                {
                    b.HasOne("Evian.Entities.Cidade", "Cidade")
                        .WithMany()
                        .HasForeignKey("CidadeId");

                    b.HasOne("Evian.Entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId");

                    b.HasOne("Evian.Entities.Pais", "Pais")
                        .WithMany()
                        .HasForeignKey("PaisId");

                    b.Navigation("Cidade");

                    b.Navigation("Estado");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Evian.Entities.SaldoHistorico", b =>
                {
                    b.HasOne("Evian.Entities.ContaBancaria", "ContaBancaria")
                        .WithOne("SaldoHistorico")
                        .HasForeignKey("Evian.Entities.SaldoHistorico", "ContaBancariaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ContaBancaria");
                });

            modelBuilder.Entity("Evian.Entities.ConciliacaoBancaria", b =>
                {
                    b.Navigation("ConciliacaoBancariaItens");
                });

            modelBuilder.Entity("Evian.Entities.ConciliacaoBancariaItem", b =>
                {
                    b.Navigation("ConciliacaoBancariaItemContasFinanceiras");
                });

            modelBuilder.Entity("Evian.Entities.ContaBancaria", b =>
                {
                    b.Navigation("SaldoHistorico");
                });

            modelBuilder.Entity("Evian.Entities.ContaPagar", b =>
                {
                    b.Navigation("MovimentacaoFinanceira");
                });

            modelBuilder.Entity("Evian.Entities.ContaReceber", b =>
                {
                    b.Navigation("MovimentacaoFinanceira");
                });
#pragma warning restore 612, 618
        }
    }
}
